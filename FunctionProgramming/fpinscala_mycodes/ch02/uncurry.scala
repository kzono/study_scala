//
// 2017.12/30
// 全く考え方がわからないので、解答例をみる

def uncurry[A,B,C](f: A => B => C): (A, B) => C
  (a, b) => f(a)(b)

  // 考え方を推測する
  // 戻り値は「引数が A, B 戻り値が C となる関数」
  // 元の f も戻り値は C となる関数
  // なので、f の A => B の部分を関数にすればよい？
  // 
  // (a, b) => f(a)(b) の読み方
  //
  // 左辺は「２つの引数 a, b を取る関数。その戻り値が右辺。」
  // 右辺は「f(a)　ｆに a を部分適用したもの。戻り値は関数。
  //         戻り値の関数に引数 b を部分適用する」

